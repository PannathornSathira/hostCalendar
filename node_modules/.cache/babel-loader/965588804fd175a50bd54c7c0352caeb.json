{"ast":null,"code":"var _jsxFileName = \"/Users/bossthemeow/Desktop/calendar_project/client/src/components/ChatGPT/ChatGPT.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport './ChatGPT.css';\nexport default function ChatGPT() {\n  const [response, setResponse] = useState(\"\");\n  const location = useLocation();\n  const title = new URLSearchParams(location.search).get(\"title\");\n  const [updatedDescription, setUpdatedDescription] = useState(\"\");\n  const HTTP = \"http://localhost:8080/chat\";\n  useEffect(() => {\n    // Request response using description as the initial prompt when the component mounts\n    if (title) {\n      axios.post(HTTP, {\n        prompt: title\n      }).then(res => {\n        setResponse(res.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [title, HTTP]);\n  const handleDescriptionUpdate = () => {\n    // Update description in the database\n    axios.post(\"http://localhost:3004/update\", {\n      title: title,\n      description: updatedDescription\n    }).then(res => {\n      console.log(res.data);\n      // Optionally, you can redirect the user to another page or refresh the current page\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bigcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container container-sm p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title text-center text-darkGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Details of meeting\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"This is a details of the meeting \", title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-darkGreen mt-2 p-1 border-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, response ? response : \"Response is loading...\")), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Updated Description:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"description\",\n    value: updatedDescription,\n    onChange: e => setUpdatedDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDescriptionUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Update Description\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Confirm meeting details\"))));\n}","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","Link","ChatGPT","response","setResponse","location","title","URLSearchParams","search","get","updatedDescription","setUpdatedDescription","HTTP","post","prompt","then","res","data","catch","error","console","log","handleDescriptionUpdate","description","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","to"],"sources":["/Users/bossthemeow/Desktop/calendar_project/client/src/components/ChatGPT/ChatGPT.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport './ChatGPT.css';\n\nexport default function ChatGPT() {\n  const [response, setResponse] = useState(\"\");\n  const location = useLocation();\n  const title = new URLSearchParams(location.search).get(\"title\");\n  const [updatedDescription, setUpdatedDescription] = useState(\"\");\n  const HTTP = \"http://localhost:8080/chat\";\n\n  useEffect(() => {\n    // Request response using description as the initial prompt when the component mounts\n    if (title) {\n      axios\n        .post(HTTP, { prompt: title })\n        .then((res) => {\n          setResponse(res.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [title, HTTP]);\n  const handleDescriptionUpdate = () => {\n    // Update description in the database\n    axios\n      .post(\"http://localhost:3004/update\", {\n        title: title,\n        description: updatedDescription\n      })\n      .then((res) => {\n        console.log(res.data);\n        // Optionally, you can redirect the user to another page or refresh the current page\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  \n\n  return (\n    <div className=\"bigcon\">\n      <div className=\"container container-sm p-1\">\n        <h1 className=\"title text-center text-darkGreen\">Details of meeting</h1>\n        <h2 >This is a details of the meeting {title}</h2>\n        <div className=\"bg-darkGreen mt-2 p-1 border-5\">\n          <p className=\"text-light\">\n            {response ? response : \"Response is loading...\"}\n          </p>\n        </div>\n        <label htmlFor=\"description\">Updated Description:</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          value={updatedDescription}\n          onChange={(e) => setUpdatedDescription(e.target.value)}\n        />\n        <button onClick={handleDescriptionUpdate}>Update Description</button>\n        <br />\n        <br />\n        <Link to=\"/\">\n            <button type=\"submit\">Confirm meeting details</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}