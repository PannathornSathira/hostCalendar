{"ast":null,"code":"var _jsxFileName = \"/Users/bossthemeow/Desktop/calendar_project/client/src/components/ChatGPT/ChatGPT.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './ChatGPT.css';\nexport default function ChatGPT() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const {\n    description\n  } = useParams();\n  const HTTP = \"http://localhost:8080/chat\";\n  useEffect(() => {\n    // Request response using description as the initial prompt when the component mounts\n    if (description) {\n      axios.post(HTTP, {\n        prompt: description\n      }).then(res => {\n        setResponse(res.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [description]);\n  const handlePrompt = e => {\n    setPrompt(e.target.value);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bigcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container container-sm p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title text-center text-darkGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Details of meeting\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"This is a details of the meeting\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-darkGreen  mt-2 p-1 border-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, response ? response : \"Ask me anything...\"))));\n}","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","ChatGPT","prompt","setPrompt","response","setResponse","description","HTTP","post","then","res","data","catch","error","console","log","handlePrompt","e","target","value","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor"],"sources":["/Users/bossthemeow/Desktop/calendar_project/client/src/components/ChatGPT/ChatGPT.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './ChatGPT.css';\nexport default function ChatGPT() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const { description } = useParams();\n  const HTTP = \"http://localhost:8080/chat\";\n  useEffect(() => {\n    // Request response using description as the initial prompt when the component mounts\n    if (description) {\n      axios\n        .post(HTTP, { prompt: description })\n        .then((res) => {\n          setResponse(res.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [description]);\n\n  const handlePrompt = (e) => {\n    setPrompt(e.target.value);\n  };\n\n  return (\n    <div className=\"bigcon\">\n    <div className=\"container container-sm p-1\">\n      {\" \"}\n      <h1 className=\"title text-center text-darkGreen\">Details of meeting</h1>\n      <label htmlFor=\"\">This is a details of the meeting</label>\n      <div className=\"bg-darkGreen  mt-2 p-1 border-5\">\n        <p className=\"text-light\">\n          {response ? response : \"Ask me anything...\"}\n        </p>\n      </div>\n    </div>\n    </div>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAES;EAAY,CAAC,GAAGP,SAAS,CAAC,CAAC;EACnC,MAAMQ,IAAI,GAAG,4BAA4B;EACzCT,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,WAAW,EAAE;MACfN,KAAK,CACFQ,IAAI,CAACD,IAAI,EAAE;QAAEL,MAAM,EAAEI;MAAY,CAAC,CAAC,CACnCG,IAAI,CAAEC,GAAG,IAAK;QACbL,WAAW,CAACK,GAAG,CAACC,IAAI,CAAC;MACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAEjB,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1Bd,SAAS,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACEvB,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvB/B,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC,4BAA4B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxC,GAAG,eACJ/B,KAAA,CAAAwB,aAAA;IAAIC,SAAS,EAAC,kCAAkC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAAsB,CAAC,eACxE/B,KAAA,CAAAwB,aAAA;IAAOQ,OAAO,EAAC,EAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,kCAAuC,CAAC,eAC1D/B,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC,iCAAiC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9C/B,KAAA,CAAAwB,aAAA;IAAGC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBvB,QAAQ,GAAGA,QAAQ,GAAG,oBACtB,CACA,CACF,CACA,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}