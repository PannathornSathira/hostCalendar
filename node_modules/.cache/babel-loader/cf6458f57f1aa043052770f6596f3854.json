{"ast":null,"code":"var _jsxFileName = \"/Users/bossthemeow/Desktop/calendar_project/client/src/components/MeetingStatus/GeminiIntegration.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Assuming you're using Axios\n//AIzaSyDDHmepWBldGvjPwSa0-zAD42hbODyDmes from google\n//AIzaSyDq8ApQMhu6ONWyEbiJkHQy7RNsfiMEvfk from and account\nfunction GeminiIntegration() {\n  const [geminiResponse, setGeminiResponse] = useState(null);\n  const apiKey = 'AIzaSyDDHmepWBldGvjPwSa0-zAD42hbODyDmes'; // Replace with your actual API key\n\n  useEffect(() => {\n    const fetchGeminiData = async () => {\n      try {\n        const response = await axios.post('https://gemini.google.com/app', {\n          prompt: \"Write a short poem about a cat basking in the sun.\" // Replace with your desired prompt\n        }, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        });\n        setGeminiResponse(response.data.response); // Or handle data as needed\n      } catch (error) {\n        console.error('Error fetching data from Gemini AI:', error);\n        // Handle errors gracefully, e.g., display an error message to the user\n      }\n    };\n    fetchGeminiData();\n  }, []);\n\n  // Display a placeholder message or the actual response, potentially processing it\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, geminiResponse ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Gemini Response: \", geminiResponse.length > 0 ? geminiResponse : 'No response received from Gemini AI.') : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Fetching data from Gemini AI...\", geminiResponse.length));\n}\nexport default GeminiIntegration;","map":{"version":3,"names":["React","useState","useEffect","axios","GeminiIntegration","geminiResponse","setGeminiResponse","apiKey","fetchGeminiData","response","post","prompt","headers","Authorization","data","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length"],"sources":["/Users/bossthemeow/Desktop/calendar_project/client/src/components/MeetingStatus/GeminiIntegration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Assuming you're using Axios\n//AIzaSyDDHmepWBldGvjPwSa0-zAD42hbODyDmes from google\n//AIzaSyDq8ApQMhu6ONWyEbiJkHQy7RNsfiMEvfk from and account\nfunction GeminiIntegration() {\n  const [geminiResponse, setGeminiResponse] = useState(null);\n  const apiKey = 'AIzaSyDDHmepWBldGvjPwSa0-zAD42hbODyDmes'; // Replace with your actual API key\n\n  useEffect(() => {\n    const fetchGeminiData = async () => {\n      try {\n        const response = await axios.post('https://gemini.google.com/app', {\n          prompt: \"Write a short poem about a cat basking in the sun.\", // Replace with your desired prompt\n        }, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`,\n          },\n        });\n\n        setGeminiResponse(response.data.response); // Or handle data as needed\n      } catch (error) {\n        console.error('Error fetching data from Gemini AI:', error);\n        // Handle errors gracefully, e.g., display an error message to the user\n      }\n    };\n\n    fetchGeminiData();\n  }, []);\n\n  // Display a placeholder message or the actual response, potentially processing it\n  return (\n    <div>\n      {geminiResponse ? (\n        <p>\n          Gemini Response: {geminiResponse.length > 0 ? geminiResponse : 'No response received from Gemini AI.'}\n        </p>\n      ) : (\n        <p>Fetching data from Gemini AI...{geminiResponse.length }</p>\n      )}\n    </div>\n  );\n}\n\nexport default GeminiIntegration;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B;AACA;AACA,SAASC,iBAAiBA,CAAA,EAAG;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMM,MAAM,GAAG,yCAAyC,CAAC,CAAC;;EAE1DL,SAAS,CAAC,MAAM;IACd,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,+BAA+B,EAAE;UACjEC,MAAM,EAAE,oDAAoD,CAAE;QAChE,CAAC,EAAE;UACDC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,MAAO;UAClC;QACF,CAAC,CAAC;QAEFD,iBAAiB,CAACG,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAAC,CAAC,CAAC;MAC7C,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC3D;MACF;IACF,CAAC;IAEDP,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACER,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGlB,cAAc,gBACbL,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,mBACgB,EAAClB,cAAc,CAACmB,MAAM,GAAG,CAAC,GAAGnB,cAAc,GAAG,sCAC9D,CAAC,gBAEJL,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iCAA+B,EAAClB,cAAc,CAACmB,MAAW,CAE5D,CAAC;AAEV;AAEA,eAAepB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}