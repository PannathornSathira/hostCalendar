{"ast":null,"code":"var _jsxFileName = \"/Users/bossthemeow/Desktop/calendar_project/client/src/components/ChatGPT/ChatGPT.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './ChatGPT.css';\nexport default function ChatGPT() {\n  const [response, setResponse] = useState(\"\");\n  const {\n    description\n  } = useParams();\n  const HTTP = \"http://localhost:8080/chat\";\n  useEffect(() => {\n    // Request response using description as the initial prompt when the component mounts\n    if (description) {\n      axios.post(HTTP, {\n        prompt: description\n      }).then(res => {\n        setResponse(res.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [description]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bigcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container container-sm p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title text-center text-darkGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Details of meeting\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"This is a details of the meeting\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-darkGreen mt-2 p-1 border-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, response ? response : \"Ask me anything...\"))));\n}","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","ChatGPT","response","setResponse","description","HTTP","post","prompt","then","res","data","catch","error","console","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor"],"sources":["/Users/bossthemeow/Desktop/calendar_project/client/src/components/ChatGPT/ChatGPT.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './ChatGPT.css';\n\nexport default function ChatGPT() {\n  const [response, setResponse] = useState(\"\");\n  const { description } = useParams();\n  const HTTP = \"http://localhost:8080/chat\";\n\n  useEffect(() => {\n    // Request response using description as the initial prompt when the component mounts\n    if (description) {\n      axios\n        .post(HTTP, { prompt: description })\n        .then((res) => {\n          setResponse(res.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [description]);\n\n  return (\n    <div className=\"bigcon\">\n      <div className=\"container container-sm p-1\">\n        <h1 className=\"title text-center text-darkGreen\">Details of meeting</h1>\n        <label htmlFor=\"\">This is a details of the meeting</label>\n        <div className=\"bg-darkGreen mt-2 p-1 border-5\">\n          <p className=\"text-light\">\n            {response ? response : \"Ask me anything...\"}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAEtB,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEO;EAAY,CAAC,GAAGL,SAAS,CAAC,CAAC;EACnC,MAAMM,IAAI,GAAG,4BAA4B;EAEzCP,SAAS,CAAC,MAAM;IACd;IACA,IAAIM,WAAW,EAAE;MACfJ,KAAK,CACFM,IAAI,CAACD,IAAI,EAAE;QAAEE,MAAM,EAAEH;MAAY,CAAC,CAAC,CACnCI,IAAI,CAAEC,GAAG,IAAK;QACbN,WAAW,CAACM,GAAG,CAACC,IAAI,CAAC;MACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,oBACER,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrB1B,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,4BAA4B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzC1B,KAAA,CAAAmB,aAAA;IAAIC,SAAS,EAAC,kCAAkC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAAsB,CAAC,eACxE1B,KAAA,CAAAmB,aAAA;IAAOQ,OAAO,EAAC,EAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,kCAAuC,CAAC,eAC1D1B,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,gCAAgC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7C1B,KAAA,CAAAmB,aAAA;IAAGC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBpB,QAAQ,GAAGA,QAAQ,GAAG,oBACtB,CACA,CACF,CACF,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}