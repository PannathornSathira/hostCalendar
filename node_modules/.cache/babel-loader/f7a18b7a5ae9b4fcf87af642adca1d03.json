{"ast":null,"code":"var _jsxFileName = \"/Users/bossthemeow/Desktop/calendar_project/client/src/components/systemprocess/systemprocess.js\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport './systemprocess.css';\nimport axios from \"axios\";\nfunction Systemprocess() {\n  const [ProcessList, setProcessList] = useState([]);\n  const location = useLocation();\n  const title = new URLSearchParams(location.search).get(\"title\");\n  const extractedText = title.split(\" \")[0];\n  let sumHours = 0;\n  let count = 0;\n  let avgTime = 0;\n  let sumMeanType = 0;\n  let typeText = '';\n  let startText = '';\n  let endText;\n  let endTimeHours;\n  useEffect(() => {\n    GetMeeting();\n  }, []);\n  const GetMeeting = () => {\n    axios.get(\"http://localhost:3004/showprocess\").then(response => {\n      setProcessList(response.data);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"choiceContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"The meeting being the same type of your title\"), ProcessList.filter(val => val.topic_name.split(\" \")[0] === extractedText).map((val, key) => {\n    let startTime = ''; // Start time\n    let endTime = ''; // End time\n    const worktypeText = val.mean_worktype > 0.5 ? 'Night owl' : 'Early bird';\n    // Convert duration time to hours\n    const durationHours = val.duration.split(':').reduce((acc, time) => 60 * acc + +time) / 60 / 60;\n    sumHours = sumHours + durationHours;\n    count = count + 1; // For finding the avg of meeting duration\n    sumMeanType = sumMeanType + val.mean_worktype; // For finding the avg of employees type\n    // Check if duration is greater than 0.5 hours\n    if (val.mean_worktype > 0.5) {\n      // If 'night owl', calculate duration as 17 - database duration\n      startTime = '12:00';\n    } else {\n      // If 'early bird', calculate duration as database duration + 9\n      startTime = '09:00';\n    }\n    const endTimeHours = (parseInt(startTime.split(':')[0]) + durationHours) % 24;\n    endTime = `${endTimeHours < 10 ? '0' : ''}${endTimeHours}:${startTime.split(':')[1]}`;\n    startTime = `${startTime}`;\n    endTime = `${endTime}`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Topic_name: \", val.topic_name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Employee: \", val.employees), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Duration: \", val.duration), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Mean_worktype: \", worktypeText), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Start time: \", startTime), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"End time: \", endTime));\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"The result\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Therefore, the duration of the new meeting is \", avgTime = Math.floor(sumHours / count), \" hours\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"The average working type is \", sumMeanType / count, \" which is \", typeText = sumMeanType / count > 0.5 ? 'Night owl' : 'Early bird'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resultProcess\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Topic_name: \", title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Duration: \", avgTime), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Mean_worktype: \", typeText), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Start time: \", startText === 'Early bird' ? '9:00' : '12:00'), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"End time: \", endText = `${(parseInt(typeText === 'Early bird' ? '9' : '12') + avgTime) % 24 < 10 ? '0' : ''}\n        ${(parseInt(typeText === 'Early bird' ? '9' : '12') + avgTime) % 24}:00`)), /*#__PURE__*/React.createElement(Link, {\n    to: `/`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Home page\")));\n}\nexport default Systemprocess;","map":{"version":3,"names":["Link","React","useLocation","useState","useEffect","axios","Systemprocess","ProcessList","setProcessList","location","title","URLSearchParams","search","get","extractedText","split","sumHours","count","avgTime","sumMeanType","typeText","startText","endText","endTimeHours","GetMeeting","then","response","data","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","val","topic_name","map","key","startTime","endTime","worktypeText","mean_worktype","durationHours","duration","reduce","acc","time","parseInt","employees","Math","floor","to"],"sources":["/Users/bossthemeow/Desktop/calendar_project/client/src/components/systemprocess/systemprocess.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport './systemprocess.css';\nimport axios from \"axios\";\nfunction Systemprocess() { \n    const [ProcessList, setProcessList] = useState([]);\n    const location = useLocation();\n    const title = new URLSearchParams(location.search).get(\"title\");\n    const extractedText = title.split(\" \")[0]\n    let sumHours=0;\n    let count=0;\n    let avgTime=0;\n    let sumMeanType=0;\n    let typeText='';\n    let startText='';\n    let endText;\n    let endTimeHours;\n    useEffect(() => {\n        GetMeeting();\n      }, []);\n      const GetMeeting = () => {\n        axios.get(\"http://localhost:3004/showprocess\").then((response) => {\n            setProcessList(response.data);\n        });\n      };\n    return (\n      <div>\n      <div className=\"choiceContainer\">\n        <h1>The meeting being the same type of your title</h1>\n       {ProcessList.filter(val => val.topic_name.split(\" \")[0] === extractedText).map((val, key) => {\n            let startTime = ''; // Start time\n            let endTime = ''; // End time\n            const worktypeText = val.mean_worktype > 0.5 ? 'Night owl' : 'Early bird';\n            // Convert duration time to hours\n            const durationHours = val.duration.split(':').reduce((acc, time) => (60 * acc) + +time) / 60 /60;\n            sumHours = sumHours+durationHours;\n            count = count+1; // For finding the avg of meeting duration\n            sumMeanType = sumMeanType+val.mean_worktype; // For finding the avg of employees type\n            // Check if duration is greater than 0.5 hours\n            if (val.mean_worktype > 0.5) {\n                // If 'night owl', calculate duration as 17 - database duration\n                startTime = '12:00';\n            } else {\n                // If 'early bird', calculate duration as database duration + 9\n                startTime = '09:00';\n            }\n            const endTimeHours = (parseInt(startTime.split(':')[0]) + durationHours) % 24;\n            endTime = `${endTimeHours < 10 ? '0' : ''}${endTimeHours}:${startTime.split(':')[1]}`;\n            startTime = `${startTime}`;\n            endTime = `${endTime}`;\n            \n                return (\n                    <div className=\"card-body text-left\">\n                    {/*<p className=\"card-text\">date: {val.date}</p>*/}\n                    <h3 className=\"card-text\">Topic_name: {val.topic_name}</h3>\n                    <p className=\"card-text\">Employee: {val.employees}</p>\n                    <p className=\"card-text\">Duration: {val.duration}</p>\n                    <p className=\"card-text\">Mean_worktype: {worktypeText}</p>\n                    <p className=\"card-text\">Start time: {startTime}</p>\n                    <p className=\"card-text\">End time: {endTime}</p>\n                    {/*<p>{count}</p>*/}\n                    </div>\n                )\n            }\n            )}    \n        </div>\n        <h1>The result</h1>\n        <h2>Therefore, the duration of the new meeting is {avgTime = Math.floor(sumHours/count)} hours</h2>\n        <h2>The average working type is {sumMeanType/count} which is {typeText= sumMeanType/count > 0.5 ? 'Night owl' : 'Early bird'}</h2>\n        <div className=\"resultProcess\">\n        <h3 className=\"card-text\">Topic_name: {title}</h3>\n        <p className=\"card-text\">Duration: {avgTime}</p>\n        <p className=\"card-text\">Mean_worktype: {typeText}</p>\n        <p className=\"card-text\">Start time: {startText === 'Early bird' ? '9:00':'12:00'}</p>\n        <p className=\"card-text\">End time: {endText = `${((parseInt(typeText === 'Early bird' ? '9' : '12') + avgTime) % 24) < 10 ? '0' : ''}\n        ${((parseInt(typeText === 'Early bird' ? '9' : '12') + avgTime) % 24)}:00`}</p> \n        {/*Calculate end time within one line. Calculate form\n         <hiden>{endTimeHours = (parseInt(typeText === 'Early bird' ? '9' : '12') + avgTime) % 24}\n        {endText = `${endTimeHours < 10 ? '0' : ''}${endTimeHours}:00`}</hiden>\n        */}\n        </div>\n        <Link to={`/`}>\n        <button>Home page</button>\n      </Link>\n      </div>\n    );\n  }\nexport default Systemprocess;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}